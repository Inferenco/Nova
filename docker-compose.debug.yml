version: '3.8'

services:
  quark-server:
    build:
      context: .
      dockerfile: quark_server/Dockerfile
    ports:
      - "3200:3200"
    environment:
      - SERVER_DOMAIN=${SERVER_DOMAIN}
      - APTOS_NETWORK=${APTOS_NETWORK}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - TOKEN_PAYMENT_ADDRESS=${TOKEN_PAYMENT_ADDRESS}
      - SECRET=${SECRET}
      - GPG_PASSPHRASE=${GPG_PASSPHRASE}
      - GPG_PRIVATE_KEY=${GPG_PRIVATE_KEY}
      - GPG_PUBLIC_KEY=${GPG_PUBLIC_KEY}
      - GPG_REVIEWER=${GPG_REVIEWER}
      - REDIS_URL=redis://:${VALKEY_PASSWORD}@valkey:6379

    networks:
      - quark-net
  quark-bot-lldb:
    build:
      context: .
      dockerfile: quark_bot/Dockerfile.lldb
    depends_on:
      - quark-server
    ports:
      - "1235:1234"  # LLDB debug port
    environment:
      - TELOXIDE_TOKEN=${TELOXIDE_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STORAGE_CREDENTIALS=${STORAGE_CREDENTIALS}
      - GCS_BUCKET_NAME=${GCS_BUCKET_NAME}
      - APTOS_NETWORK=${APTOS_NETWORK}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - MIN_DEPOSIT=${MIN_DEPOSIT}
      - PANORA_URL=${PANORA_URL}
      - PANORA_API_KEY=${PANORA_API_KEY}
      - TIME_API_BASE_URL=${TIME_API_BASE_URL}
      - SLED_URL=${SLED_URL}
      - SECRET=${SECRET}
      - APP_URL=${APP_URL}
      - RUST_BACKTRACE=1
      - BACKEND_URL=${BACKEND_URL}
    networks:
      - quark-net
    volumes:
      - quark-data:/app/quark_data
      - ./quark_bot/src:/app/quark_bot/src:ro  # Mount source for hot reload
      - ./quark_core/src:/app/quark_core/src:ro
    # Override command to run with lldb-server for remote debugging
    command: ["lldb-server", "gdbserver", "*:1234", "./quark_bot"]
    stdin_open: true
    tty: true
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined

  valkey:
    image: bitnami/valkey:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - VALKEY_PASSWORD=${VALKEY_PASSWORD}
      - VALKEY_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '6379:6379'
    volumes:
      - 'valkey_data:/app/valkey_data'
    networks:
      - quark-net

  quark-consumer-one:
    build:
      context: .
      dockerfile: quark_consumer/Dockerfile
    depends_on:
      - quark-server
    environment:
      - REDIS_URL=redis://:${VALKEY_PASSWORD}@valkey:6379
      - CONSUMER_ID=consumer-one
      - PROFILE=${PROFILE}
      - PANORA_URL=${PANORA_URL}
      - PANORA_API_KEY=${PANORA_API_KEY}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - APTOS_NETWORK=${APTOS_NETWORK}
      - GPG_PASSPHRASE=${GPG_PASSPHRASE}
      - GPG_PRIVATE_KEY=${GPG_PRIVATE_KEY}
      - GPG_PUBLIC_KEY=${GPG_PUBLIC_KEY}
      - GPG_REVIEWER=${GPG_REVIEWER}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - RUST_BACKTRACE=1

    networks:
      - quark-net
    volumes:
      - quark-data:/app/quark_data

  quark-consumer-two:
    build:
      context: .
      dockerfile: quark_consumer/Dockerfile
    depends_on:
      - quark-server
    environment:
      - REDIS_URL=redis://:${VALKEY_PASSWORD}@valkey:6379
      - CONSUMER_ID=consumer-one
      - PROFILE=${PROFILE}
      - PANORA_URL=${PANORA_URL}
      - PANORA_API_KEY=${PANORA_API_KEY}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - APTOS_NETWORK=${APTOS_NETWORK}
      - GPG_PASSPHRASE=${GPG_PASSPHRASE}
      - GPG_PRIVATE_KEY=${GPG_PRIVATE_KEY}
      - GPG_PUBLIC_KEY=${GPG_PUBLIC_KEY}
      - GPG_REVIEWER=${GPG_REVIEWER}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - RUST_BACKTRACE=1
    networks:
      - quark-net
    volumes:
      - quark-data:/app/quark_data

  quark-webhook:
    build:
      context: .
      dockerfile: quark-webhook/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_EXPLORER_URL=${NEXT_PUBLIC_EXPLORER_URL}
      - ACCOUNT_SEED=${ACCOUNT_SEED}
      - APTOS_NODE_URL=${APTOS_NODE_URL}
      - APTOS_INDEXER=${APTOS_INDEXER}
      - NEXT_PUBLIC_APTOS_NETWORK=${NEXT_PUBLIC_APTOS_NETWORK}
    networks:
      - quark-net

volumes:
  quark-data:
    driver: local
  valkey_data:
    driver: local
  quark_redis_data:
    driver: local

networks:
  quark-net:
    driver: bridge 